{"version":3,"file":"docsify-latex.js","sources":["../src/js/tools.js","../src/js/settings.js","../src/js/constant.js","../src/js/render-function.js","../src/js/render.js","../src/js/index.js"],"sourcesContent":["export function escapeHtml(unsafe) {\n  return unsafe.replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\nexport function unescapeHtml(htmlStr) {\n  htmlStr = htmlStr.replace(/&lt;/g , '<');\n  htmlStr = htmlStr.replace(/&gt;/g , '>');\n  htmlStr = htmlStr.replace(/&quot;/g , '\"');\n  htmlStr = htmlStr.replace(/&#39;/g , '\\'');\n  htmlStr = htmlStr.replace(/&amp;/g , '&');\n  return htmlStr;\n}\n\nexport function escapeRegex(regexStr) {\n  return regexStr.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n// Deep cover an object, for every keys in sourceObj, replce the value of targetObj\n// if its key exists, or put key&value into targetObj if not exists.\nexport function coverObject(sourceObj, targetObj) {\n  Object.keys(sourceObj).forEach(key => {\n    if (!Object.prototype.hasOwnProperty.call(targetObj, key)) {\n      targetObj[key] = sourceObj[key];\n      return;\n    }\n    if (Object.prototype.toString.call(sourceObj[key]) !== '[object Object]') {\n      targetObj[key] = sourceObj[key];\n      return;\n    }\n    coverObject(sourceObj[key], targetObj[key]);\n  });\n}\n","import { version as pkgVersion } from '../../package.json';\nimport { coverObject } from './tools';\n\n// Settings\n// =============================================================================\nconst settings = {\n  inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n  displayMath: [['$$', '$$']],\n  overflowScroll: true,\n  beforeInitFunc: () => {},\n  customOptions: {},\n};\n\nif (window) {\n  window.$docsify = window.$docsify || {};\n\n  // Add config object\n  window.$docsify.latex = window.$docsify.latex || {};\n\n  // Update settings based on $docsify config\n  coverObject(window.$docsify.latex, settings);\n  // Add plugin data\n  window.$docsify.latex.version = pkgVersion;\n}\n\nexport default settings;\n","export const latexTagName = 'docsify-latex';\nexport const latexBackTagName = 'docsify-latex-back';\n\nexport const latexTagDisplayAttrName = 'display';\n","// Render related functions\n// =============================================================================\nimport { latexTagName, latexBackTagName } from './constant';\n\n// TODO: custom\nconst jumpToTitle = 'Jump to equation';\nconst gobackTitle = 'Back To Reference';\nconst linkColor = '#0B87DA';\n\n// Implementation\n// =============================================================================\nexport function addReferenceJump(element) {\n  const elements = element.querySelectorAll(`${latexTagName} a[href]`);\n  if (elements === null || elements.length === 0) {\n    return;\n  }\n  for (const linkElement of elements) {\n    if (!Object.prototype.hasOwnProperty.call(linkElement.style, 'color')\n       || !linkElement.style.color) {\n      linkElement.style.color = linkColor;\n    }\n    // Add jump\n    const hrefAttr = linkElement.getAttribute('href');\n    const refId = decodeURIComponent(hrefAttr).substring(1);\n    if (hrefAttr.startsWith('#')) {\n      linkElement.title = jumpToTitle;\n      linkElement.onclick = () => {\n        const referedEle = document.getElementById(refId);\n        if (null === referedEle) {\n          return true;\n        }\n\n        let referedLatexEle = referedEle.parentElement;\n        while (referedLatexEle !== null) {\n          if (referedLatexEle.tagName === latexTagName.toUpperCase()) {\n            break;\n          }\n          referedLatexEle = referedLatexEle.parentElement;\n        }\n        // Add back to reference element\n        let backToEle = referedLatexEle.querySelector(latexBackTagName);\n        if (null === backToEle) {\n          backToEle = document.createElement(latexBackTagName);\n          referedLatexEle.append(backToEle);\n          backToEle.innerHTML = `<a href onclick=\"return false;\">${gobackTitle}</a>`;\n          backToEle.style.color = linkColor;\n          backToEle.style.float = 'right';\n        }\n        const currentPosition = document.documentElement.scrollTop;\n        backToEle.style.display = '';\n        backToEle.onclick = () => {\n          backToEle.style.display = 'none';\n          window.scrollTo(0, currentPosition);\n          return false;\n        };\n\n        window.scrollTo(0, referedLatexEle.offsetTop - linkElement.getBoundingClientRect().top);\n        return false;\n      };\n    }\n  }\n}\n","// Math display engine integration\n// =============================================================================\nimport settings from './settings';\nimport { latexTagName } from './constant';\nimport { coverObject, unescapeHtml } from './tools';\nimport { addReferenceJump } from './render-function';\n\n// Template\n// =============================================================================\nconst latexRender = Object;\nlatexRender.prepareContent = (content, latex) => { return content; };\nlatexRender.prepareRender = () => {};\nlatexRender.renderElement = (element, displayMode) => {};\nlatexRender.afterRender = () => {};\n\n// Implementation\n// =============================================================================\n\nsettings.beforeInitFunc();\n\n// - MathJax (V2, V3)\nif (typeof MathJax !== 'undefined' && MathJax) {\n  // MathJax configs and functions init\n  if (MathJax.version[0] === '3') {\n    coverObject(settings.customOptions, MathJax.config);\n    // Prevent inconsistency render symbol problem\n    MathJax.config.tex.inlineMath = settings.inlineMath;\n    MathJax.config.tex.displayMath = settings.displayMath;\n    MathJax.startup.getComponents();\n    latexRender.prepareRender = () => {\n      MathJax.startup.getComponents();\n      const OUTPUT = MathJax.startup.output;\n      if (typeof OUTPUT.clearCache !== 'undefined') {\n        OUTPUT.clearCache();\n      } else  if (typeof OUTPUT.clearFontCache !== 'undefined') {\n        OUTPUT.clearFontCache();\n      }\n    };\n    latexRender.renderElement = async (element, displayMode) => {\n      await MathJax.typesetPromise([element]);\n    };\n    latexRender.afterRender = () => {\n      addReferenceJump(document);\n      // Fix https://github.com/mathjax/MathJax/issues/2936\n      if (!settings.overflowScroll) {\n        return;\n      }\n      const latexElements = document.querySelectorAll(latexTagName);\n      for (const latexElement of latexElements) {\n        const mjxMathEle = latexElement.querySelector('mjx-math');\n        if (mjxMathEle === null) {\n          continue;\n        }\n        mjxMathEle.style.width = '';\n        const mjxMathWidth = mjxMathEle.getBoundingClientRect().width;\n\n        let mjxMllWidth = 0;\n        const mjxMllEle = latexElement.querySelector('mjx-assistive-mml');\n        if (mjxMathEle !== null) {\n          mjxMllWidth = mjxMllEle.getBoundingClientRect().width;\n        }\n        latexElement.style.width = Math.max(mjxMathWidth, mjxMllWidth) + 'px';\n      }\n    };\n  } else if (MathJax.version[0] === '2') {\n    const options = {\n      skipStartupTypeset: true,\n      messageStyle: 'none'\n    };\n    coverObject(settings.customOptions, options);\n    // Prevent inconsistency render symbol problem\n    coverObject({\n      tex2jax: {\n        inlineMath: settings.inlineMath,\n        displayMath: settings.displayMath\n      }\n    }, options);\n    MathJax.Hub.Config(options);\n    MathJax.Hub.processSectionDelay = 0;\n    MathJax.Hub.processUpdateDelay = 0;\n    latexRender.prepareRender = () => {\n      if (typeof MathJax.InputJax.TeX !== 'undefined') {\n        MathJax.Hub.Queue(\n          ['PreProcess', MathJax.Hub],\n          ['resetEquationNumbers', MathJax.InputJax.TeX],\n        );\n      }\n      MathJax.Hub.Queue(\n        ['PreProcess', MathJax.Hub],\n        ['Reprocess', MathJax.Hub]\n      );\n    };\n    latexRender.renderElement = (element, displayMode) => {\n      MathJax.Hub.Queue(\n        ['Typeset', MathJax.Hub, element],\n        [addReferenceJump, element]\n      );\n    };\n  }\n}\n// - KaTeX\nelse if (typeof katex !== 'undefined' && katex) {\n  const options = {\n    throwOnError: false,\n    trust: (context) => ['\\\\htmlId', '\\\\href'].includes(context.command),\n    macros: {\n      '\\\\eqref': '\\\\href{##ktx-#1}{(\\\\text{#1})}',\n      '\\\\ref': '\\\\href{##ktx-#1}{\\\\text{#1}}',\n      '\\\\label': '\\\\htmlId{ktx-#1}{}'\n    }\n  };\n  coverObject(settings.customOptions, options);\n\n  latexRender.prepareContent = (_content, latex) => { return latex; };\n  latexRender.renderElement = (element, displayMode) => {\n    options.displayMode = displayMode;\n    element.innerHTML = katex.renderToString(unescapeHtml(element.innerHTML), options);\n    addReferenceJump(element);\n  };\n}\n\nexport default latexRender;\n","// Dependencies\n// =============================================================================\nimport settings from './settings';\nimport latexRender from './render';\nimport { escapeHtml, escapeRegex } from './tools';\nimport { latexTagName, latexTagDisplayAttrName } from './constant';\n\n// Constants and variables\n// =============================================================================\nconst commentReplaceMark = 'latex:replace';\nconst deleteReplaceMark = 'latex:delete';\n\n// Regex rules Init\n// =============================================================================\nfunction getCommentReplaceMarkedText(text, placeholder='') {\n  return `<!-- ${commentReplaceMark} ${placeholder} ${text} -->`;\n}\n\n// Matches replacement comment\nfunction getCommentReplaceMarkupRegex(placeholder='') {\n  return new RegExp(`<!-- ${commentReplaceMark} ${placeholder} (.*?) -->`);\n}\n\nfunction getBlockRegex(matchStartRegex, matchEndRegex, needMatchMultipleLine, escape = true) {\n  // Escape string according to regex syntax\n  if (escape) {\n    matchStartRegex = escapeRegex(matchStartRegex);\n    matchEndRegex = escapeRegex(matchEndRegex);\n  }\n  // Matches markdown inline math\n  // Group 0: whole match result\n  // Group 1: content (with matchRegexs)\n  // Group 2: matchStartRegex match result\n  // Group 3: inner content (with matchRegexs)\n  return new RegExp(`(?:^|[^\\\\\\\\])((${matchStartRegex})((?:[^\\\\\\\\${needMatchMultipleLine ? '' : '\\n'}]|\\\\\\\\.)+?)${matchEndRegex})`);\n}\n\nfunction matchByRegexArray(content, regexGroup, displayMode = false) {\n  const mathRegex = getBlockRegex(regexGroup[0], regexGroup[1], displayMode);\n  return matchByRegex(content, mathRegex, displayMode);\n}\n\nfunction matchByRegex(content, regex, displayMode = false) {\n  const matchResult = content.match(regex);\n  if (matchResult) {\n    const result = {};\n    result.displayMode = displayMode;\n    result.content = matchResult[1];\n    result.innerContent = matchResult[3];\n    result.index = matchResult.index + matchResult[0].length - result.content.length;\n    result.endIndex = result.index + result.content.length;\n    // For debug only\n    result.regex = regex;\n    return result;\n  }\n  return null;\n}\n\nconst codePlaceholder = 'CODE';\n\nconst regex = {\n  // Matches html code blocks (inline and multi-line)\n  // Example: <code>CODE</code>\n  codeTagMarkup: getBlockRegex('<code>', '</code>', true),\n\n  // Matches markdown code blocks (inline and multi-line)\n  // Example: ```CODE```\n  codeBlockMarkup: getBlockRegex('`{3,}', '\\\\2', true, false),\n\n  // Matches markdown inline code\n  // Example: `CODE`\n  codeInlineMarkup: getBlockRegex('`{1,}', '\\\\2', false, false),\n\n  commentDeleteReplaceMarkup: /^(>?[ ]*)<!--/gm,\n\n  commentReplaceMarkup: getCommentReplaceMarkupRegex(),\n  commentCodeReplaceMarkup: getCommentReplaceMarkupRegex(codePlaceholder)\n};\n\n// Match functions\n// =============================================================================\n\nfunction matchMathBlocks(content) {\n  let inlineResult;\n  let displayResult;\n  const resultList = [];\n  for (const regexGroup of settings.inlineMath) {\n    inlineResult = matchByRegexArray(content, regexGroup, false);\n    if (inlineResult) {\n      break;\n    }\n  }\n  for (const regexGroup of settings.displayMath) {\n    displayResult = matchByRegexArray(content, regexGroup, true);\n    if (displayResult) {\n      break;\n    }\n  }\n  if (inlineResult) {\n    if (null === displayResult) {\n      resultList.push(inlineResult);\n    }\n    // If display shows before inline section, keep display only, no\n    // matter two blocks have any intersection.\n    else if (displayResult.index > inlineResult.index) {\n      resultList.push(inlineResult);\n      // Display and inline have intersection, keep inline only.\n      if (displayResult.index < inlineResult.endIndex) {\n        displayResult = null;\n      }\n      // No intersection, two independent matches.\n    }\n  }\n  if (displayResult) {\n    resultList.push(displayResult);\n  }\n  return resultList;\n}\n\n/**\n * Used to replace the content with matched result and wrapper it to comment\n * to prevent unpredictable behaviour\n *\n * @param {*} content original content\n * @param {*} contentMatch regex match result\n * @param {*} matchIndexForReplace which index of match result will be used to replace the original content\n * @param {*} placeholder place holder for replaced content\n * @param {*} matchList\n * @param {*} markerList\n * @returns\n */\nfunction matchReplacedConent(content, contentMatch, placeholder='') {\n  const contentLength = contentMatch.content.length;\n  const commentedConent = getCommentReplaceMarkedText(window.btoa(encodeURIComponent(contentMatch.content)), `${placeholder}`);\n  content = content.substring(0, contentMatch.index) + commentedConent\n    + content.substring(contentMatch.index + contentLength, content.length);\n  return content;\n}\n\nfunction getCodeRestoredContent(content) {\n  let contentMatch;\n  while ((contentMatch = regex.commentCodeReplaceMarkup.exec(content)) !== null) {\n    const commentMark = contentMatch[0];\n    const originalContent = contentMatch[1] || '';\n    content = content.replace(commentMark, () => (decodeURIComponent(window.atob(originalContent))));\n  }\n  return content;\n}\n\n/**\n * Converts LaTeX content into \"stage 1\" markup. Stage 1 markup contains temporary\n * comments which are replaced with HTML during Stage 2. This approach allows\n * all markdown to be converted to HTML before LaTeX-specific HTML is added.\n *\n * @param {string} content\n * @returns {string}\n */\nfunction renderStage1(content) {\n  let contentMatch;\n  // Protect content\n  // Replace code block with marker to ensure LaTeX markup within code\n  // blocks is not processed.\n  // These markers are replaced with their associated code blocs after\n  // blocks have been processed.\n  // WARN: Do not change the order of matches!\n  while ((contentMatch = matchByRegex(content, regex.codeTagMarkup)) !== null) {\n    content = matchReplacedConent(content, contentMatch, codePlaceholder);\n  }\n  while ((contentMatch = matchByRegex(content, regex.codeBlockMarkup)) !== null) {\n    content = matchReplacedConent(content, contentMatch, codePlaceholder);\n  }\n  while ((contentMatch = matchByRegex(content, regex.codeInlineMarkup)) !== null) {\n    content = matchReplacedConent(content, contentMatch, codePlaceholder);\n  }\n\n  // Render math blocks without code symbol `\n  let mathMatchs;\n  while ((mathMatchs = matchMathBlocks(content)).length !== 0) {\n    let lastIndex = -1;\n    let lastOffset = 0;\n    for (contentMatch of mathMatchs) {\n      const matchLength = contentMatch.content.length;\n      let preparedContent = latexRender.prepareContent(contentMatch.content, contentMatch.innerContent);\n      preparedContent = getCodeRestoredContent(preparedContent);\n      const latexElementAttrList = [];\n      latexElementAttrList.push(`${latexTagDisplayAttrName}=\"${contentMatch.displayMode}\"`);\n      if (settings.overflowScroll) {\n        const displayStyle = contentMatch.displayMode ? 'block' : 'inline-flex';\n        latexElementAttrList.push(`style=\"max-width: 100%;display: ${displayStyle};overflow: auto hidden;\"`);\n      }\n      const preparedHTML = `<${latexTagName} ${latexElementAttrList.join(' ')}>${escapeHtml(preparedContent)}</${latexTagName}>`;\n      const contentReplacement = getCommentReplaceMarkedText(window.btoa(encodeURIComponent(preparedHTML)));\n      let contentIndex = contentMatch.index;\n      if (contentMatch.index > lastIndex) {\n        contentIndex += lastOffset;\n      }\n      lastIndex = contentMatch.index;\n      lastOffset = contentReplacement.length - matchLength;\n      content = content.substring(0, contentIndex) + contentReplacement\n        + content.substring(contentIndex + matchLength, content.length);\n    }\n  }\n\n  // Unprotect content\n  content = getCodeRestoredContent(content);\n\n  // Put this in end of the processing pipeline, ensure docsify can render line breaks\n  // by itself, rather than ignore empty lines.\n  content = content.replaceAll(regex.commentDeleteReplaceMarkup, `$1${deleteReplaceMark}<!--`);\n\n  return content;\n}\n\n/**\n * Converts \"stage 1\" markup into final markup by replacing temporary comments\n * with HTML.\n *\n * @param {string} html\n * @returns {string}\n */\nfunction renderStage2(html) {\n  let contentMatch;\n  html = html.replaceAll(deleteReplaceMark, '');\n\n  // Restore all commented elements\n  while ((contentMatch = regex.commentReplaceMarkup.exec(html)) !== null) {\n    const commentMark = contentMatch[0];\n    const originalContent = contentMatch[1] || '';\n    html = html.replace(commentMark, () => (decodeURIComponent(window.atob(originalContent))));\n  }\n  return html;\n}\n\nasync function renderStage3() {\n  latexRender.prepareRender();\n  // Perform remain actions to latex elements\n  const mathElements =  document.getElementsByTagName(latexTagName);\n  for (const element of mathElements) {\n    const displayMode = element.getAttribute(latexTagDisplayAttrName) === 'true';\n    await latexRender.renderElement(element, displayMode);\n  }\n  latexRender.afterRender();\n}\n\n// Plugin\n// =============================================================================\nfunction initLatex(hook, vm) {\n  hook.beforeEach(function (content, next) {\n    content = renderStage1(content);\n    next(content);\n  });\n\n  hook.afterEach(function (html, next) {\n    html = renderStage2(html);\n    next(html);\n  });\n  hook.doneEach(async function() {\n    await renderStage3();\n  });\n\n}\n\nif (window) {\n  // Init plugin\n  window.$docsify.plugins = [].concat(\n    (window.$docsify.plugins || []),\n    initLatex\n  );\n}\n"],"names":["escapeHtml","unsafe","replace","unescapeHtml","htmlStr","escapeRegex","regexStr","coverObject","sourceObj","targetObj","Object","keys","forEach","key","prototype","hasOwnProperty","call","toString","settings","inlineMath","displayMath","overflowScroll","beforeInitFunc","customOptions","window","$docsify","latex","version","pkgVersion","latexTagName","latexBackTagName","latexTagDisplayAttrName","jumpToTitle","gobackTitle","linkColor","addReferenceJump","element","elements","querySelectorAll","concat","length","_iterator","_createForOfIteratorHelper","_step","_loop","linkElement","value","style","color","hrefAttr","getAttribute","refId","decodeURIComponent","substring","startsWith","title","onclick","referedEle","document","getElementById","referedLatexEle","parentElement","tagName","toUpperCase","backToEle","querySelector","createElement","append","innerHTML","float","currentPosition","documentElement","scrollTop","display","scrollTo","offsetTop","getBoundingClientRect","top","s","n","done","err","e","f","latexRender","prepareContent","content","prepareRender","renderElement","displayMode","afterRender","MathJax","config","tex","startup","getComponents","OUTPUT","output","clearCache","clearFontCache","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","typesetPromise","stop","_x","_x2","apply","this","arguments","latexElements","latexElement","mjxMathEle","width","mjxMathWidth","mjxMllWidth","mjxMllEle","Math","max","options","skipStartupTypeset","messageStyle","tex2jax","Hub","Config","processSectionDelay","processUpdateDelay","InputJax","TeX","Queue","katex","throwOnError","trust","context","includes","command","macros","_content","renderToString","commentReplaceMark","deleteReplaceMark","getCommentReplaceMarkedText","text","placeholder","getCommentReplaceMarkupRegex","RegExp","getBlockRegex","matchStartRegex","matchEndRegex","needMatchMultipleLine","escape","matchByRegexArray","regexGroup","mathRegex","matchByRegex","regex","matchResult","match","result","innerContent","index","endIndex","codePlaceholder","codeTagMarkup","codeBlockMarkup","codeInlineMarkup","commentDeleteReplaceMarkup","commentReplaceMarkup","commentCodeReplaceMarkup","matchMathBlocks","inlineResult","displayResult","resultList","_step2","_iterator2","push","matchReplacedConent","contentMatch","contentLength","commentedConent","btoa","encodeURIComponent","getCodeRestoredContent","commentMark","originalContent","atob","exec","renderStage1","mathMatchs","lastIndex","lastOffset","_iterator3","_step3","matchLength","preparedContent","latexElementAttrList","displayStyle","preparedHTML","join","contentReplacement","contentIndex","replaceAll","renderStage2","html","_loop2","renderStage3","_renderStage","_callee2","mathElements","_iterator4","_step4","_callee2$","_context2","getElementsByTagName","t0","finish","initLatex","hook","vm","beforeEach","afterEach","doneEach","plugins"],"mappings":"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"}